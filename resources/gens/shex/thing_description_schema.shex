# metamodel_version: 1.7.0
BASE <https://www.w3.org/2019/wot/td#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>
PREFIX jsonschema: <https://www.w3.org/2019/wot/json-schema#>
PREFIX wotsec: <https://www.w3.org/2019/wot/security#>
PREFIX hctl: <https://www.w3.org/2019/wot/hypermedia#>
PREFIX schema1: <http://schema.org/>


<AnyUri> IRI

linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:time

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

linkml:Jsonpointer xsd:string

linkml:Jsonpath xsd:string

linkml:Sparqlpath xsd:string

<ActionAffordance> CLOSED {
    (  $<ActionAffordance_tes> (  &<InteractionAffordance_tes> ;
          rdf:type [ <InteractionAffordance> ] ? ;
          <safe> @linkml:Boolean ? ;
          <synchronous> @linkml:Boolean ? ;
          <idempotent> @linkml:Boolean ? ;
          <input> @<DataSchema> ? ;
          <output> @<DataSchema> ?
       ) ;
       rdf:type [ <ActionAffordance> ]
    )
}

<AdditionalExpectedResponse> CLOSED {
    (  $<AdditionalExpectedResponse_tes> (  &<ExpectedResponse_tes> ;
          rdf:type [ hctl:ExpectedResponse ] ? ;
          <additionalOutputSchema> @linkml:String ? ;
          <success> @linkml:Boolean ? ;
          <schema> @linkml:String ?
       ) ;
       rdf:type [ hctl:AdditionalExpectedResponse ] ?
    )
}

<DataSchema> CLOSED {
    (  $<DataSchema_tes> (  <description> @<MultiLanguage> ? ;
          <title> @<MultiLanguage> ? ;
          <titleInLanguage> @<MultiLanguage> ? ;
          <descriptionInLanguage> @<MultiLanguage> ? ;
          <propertyName> @linkml:String ? ;
          <writeOnly> @linkml:String ? ;
          <readonly> @linkml:String ?
       ) ;
       rdf:type [ jsonschema:DataSchema ] ?
    )
}

<EventAffordance> CLOSED {
    (  $<EventAffordance_tes> (  &<InteractionAffordance_tes> ;
          rdf:type [ <InteractionAffordance> ] ? ;
          <subscription> @<DataSchema> ? ;
          <cancellation> @<DataSchema> ? ;
          <notification> @<DataSchema> ? ;
          <notificationResponse> @<DataSchema> ?
       ) ;
       rdf:type [ <EventAffordance> ]
    )
}

<ExpectedResponse>  (
    CLOSED {
       (  $<ExpectedResponse_tes> <contentType> @linkml:String ;
          rdf:type [ hctl:ExpectedResponse ] ?
       )
    } OR @<AdditionalExpectedResponse>
)

<Form> CLOSED {
    (  $<Form_tes> (  hctl:target @<AnyUri> ;
          <href> @<AnyUri> ;
          <contentType> @linkml:String ? ;
          <contentCoding> @linkml:String ? ;
          <securityDefinitions> @linkml:String ? ;
          <scopes> @linkml:String ? ;
          <returns> @<ExpectedResponse> ? ;
          <additionalReturns> @<AdditionalExpectedResponse> * ;
          <subprotocol> @linkml:String ? ;
          <operationType> [ <readProperty> <writeProperty> <observeProperty> <unobserveProperty> <invokeAction> <queryAction>
             <cancelAction> <subscribeEvent> <unsubscribeEvent> <readAllProperties> <writeAllProperties> <readMultipleProperties>
             <writeMultipleProperties> <observeAllProperties> <unobserveAllProperties> <subscribeAllEvents> <unsubscribeAllEvents>
             <queryAllActions> ] *
       ) ;
       rdf:type [ hctl:Form ] ?
    )
}

<InteractionAffordance>  (
    CLOSED {
       (  $<InteractionAffordance_tes> (  <titles> @<MultiLanguage> * ;
             <descriptions> @<MultiLanguage> * ;
             <title> @<MultiLanguage> ? ;
             <description> @<MultiLanguage> ? ;
             <titleInLanguage> @<MultiLanguage> ? ;
             <descriptionInLanguage> @<MultiLanguage> ? ;
             <uriVariables> @<DataSchema> * ;
             <forms> @<Form> *
          ) ;
          rdf:type [ <InteractionAffordance> ]
       )
    } OR @<ActionAffordance> OR @<EventAffordance> OR @<PropertyAffordance>
)

<Link> CLOSED {
    (  $<Link_tes> (  hctl:target @<AnyUri> ;
          <hintsAtMediaType> @linkml:String ? ;
          <type> @linkml:String ? ;
          <relation> @linkml:String ? ;
          <anchor> @<AnyUri> ? ;
          <sizes> @linkml:String ? ;
          <hreflang> @linkml:String ?
       ) ;
       rdf:type [ hctl:Link ] ?
    )
}

<MultiLanguage> CLOSED {
    (  $<MultiLanguage_tes> rdf:type . * ;
       rdf:type [ <MultiLanguage> ]
    )
}

<PropertyAffordance> CLOSED {
    (  $<PropertyAffordance_tes> (  &<InteractionAffordance_tes> ;
          rdf:type [ <InteractionAffordance> ] ? ;
          &<DataSchema_tes> ;
          rdf:type [ jsonschema:DataSchema ] ? ;
          <observable> @linkml:Boolean ? ;
          <propertyName> @linkml:String ? ;
          <writeOnly> @linkml:String ? ;
          <readonly> @linkml:String ?
       ) ;
       rdf:type [ <PropertyAffordance> ]
    )
}

<SecurityScheme> CLOSED {
    (  $<SecurityScheme_tes> (  <@type> @linkml:String * ;
          <descriptions> @<MultiLanguage> * ;
          <description> @linkml:String ? ;
          <proxy> @<AnyUri> ? ;
          <scheme> [ wotsec:NoSecurityScheme wotsec:ComboSecurityScheme wotsec:BasicSecurityScheme wotsec:DigestSecurityScheme
             wotsec:BearerSecurityScheme wotsec:PSKSecurityScheme wotsec:OAuth2SecurityScheme wotsec:APIKeySecurityScheme
             wotsec:AutoSecurityScheme ]
       ) ;
       rdf:type [ <SecurityScheme> ] ?
    )
}

<Thing> CLOSED {
    (  $<Thing_tes> (  <title> @<MultiLanguage> ? ;
          <description> @<MultiLanguage> ? ;
          <titles> @<MultiLanguage> * ;
          <descriptions> @<MultiLanguage> * ;
          <@type> @linkml:String * ;
          <titleInLanguage> @<MultiLanguage> ? ;
          <descriptionInLanguage> @<MultiLanguage> ? ;
          <securityDefinitions> @linkml:String * ;
          <security> @linkml:String * ;
          <schemaDefinitions> @<DataSchema> * ;
          <profile> @<AnyUri> * ;
          <instance> @linkml:String ? ;
          <created> @linkml:Datetime ? ;
          <modified> @linkml:Datetime ? ;
          <supportContact> @<AnyUri> ? ;
          <base> @<AnyUri> ? ;
          <version> @<VersionInfo> ? ;
          <forms> @<Form> * ;
          <links> @<Link> * ;
          <properties> @<PropertyAffordance> * ;
          <actions> @<ActionAffordance> * ;
          <events> @<EventAffordance> *
       ) ;
       rdf:type [ <Thing> ]
    )
}

<VersionInfo> CLOSED {
    (  $<VersionInfo_tes> (  <instance> @linkml:String ;
          <model> @linkml:String ?
       ) ;
       rdf:type [ schema1:version ] ?
    )
}

