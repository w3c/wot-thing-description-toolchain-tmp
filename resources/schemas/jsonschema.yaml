id: https://raw.githubusercontent.com/w3c/wot-thing-description/main/dataschema
name: jsonschema
title: jsonschema
version: "1.1-05-July-2024"
description: |-
  LinkML schema for modelling the TD Module for data schema specifications.
license: MIT
see_also:
  - https://www.w3.org/TR/wot-thing-description11/

prefixes:
  linkml:
    prefix_prefix: linkml
    prefix_reference: https://w3id.org/linkml/
  td:
    prefix_prefix: td
    prefix_reference: https://www.w3.org/2019/wot/td#
  jsonschema:
    prefix_prefix: jsonschema
    prefix_reference: https://www.w3.org/2019/wot/json-schema#
  wotsec:
    prefix_prefix: wotsec
    prefix_reference: https://www.w3.org/2019/wot/security#
  hctl:
    prefix_prefix: hctl
    prefix_reference: https://www.w3.org/2019/wot/hypermedia#
  schema:
    prefix_prefix: schema
    prefix_reference: http://schema.org/
  tm:
    prefix_prefix: tm
    prefix_reference: https://www.w3.org/2019/wot/tm#
default_prefix: jsonschema
default_range: string

imports:
  - linkml:types

slots:
  type:
    description: >-
      DataSchema type required for the JSON-LD type definitions
    range: DataschemaTypes

classes:
  DataSchema:
    class_uri: jsonschema:DataSchema
    description: >-
      Metadata that describes an abstract notation for data contained in data formats. It can be used for validation.
    attributes:
      const:
        description: >-
          Provides a constant value.
        range: Any
      default:
        description: >-
          Supply a default value. The value SHOULD validate against the data schema in which it resides.
        range: Any
      unit:
        description: >-
          Provides unit information that is used, e.g., in international science, engineering, and business. 
          To preserve uniqueness, it is recommended that the value of the unit points to a semantic definition.
      oneof:
        description: >-
          Used to ensure that the data is valid against one of the specified schemas in the array. 
          This can be used to describe multiple input or output schemas.
      enum:
        description: >-
          Restricted set of values provided as an array.
        multivalued: true
        range: Any
      format:
        description: >-
          Allows validation based on a format pattern such as "date-time", "email", "uri", etc.
      propertyName:
        description: >-
          Used to store the indexing name in the parent object when this schema appears as a property of an object schema.
      writeOnly:
        description: >-
          Boolean value that is a hint to indicate whether a property interaction/value is write only (=true) or not (=false).
        range: boolean
      readonly:
        description: >-
          Boolean value that is a hint to indicate whether a property interaction/value is read only (=true) or not (=false).
        range: boolean
      contentEncoding:
        description: >-
          todo
      contentMediaType:
        description: >-
          Specifies the MIME type of the contents of a string value, as described in [RFC2046].
        examples:
          - value: image/png
          - value: audio/mpeg
    slots:
      - "@type"
      - description
      - title
      - titles
      - descriptions
      - type
  ArraySchema:
    is_a: DataSchema
    attributes:
      items:
        description: >-
          Used to define the characteristics of an array.
        exactly_one_of:
          - range: DataSchema
          - range: DataSchema
            multivalued: true
      minItems:
        description: >-
          Defines the minimum number of items that have to be in the array.
        range: integer
      maxItems:
        description: >-
          Defines the maximum number of items that have to be in the array.
        range: integer
  BooleanSchema:
    is_a: DataSchema
    description: >-
      Metadata describing data of type boolean. This Subclass is indicated by the value boolean assigned to type in DataSchema instances.
  NumberSchema:
    is_a: DataSchema
    description: >-
      Metadata describing data of type number. This Subclass is indicated by the value number assigned to type in DataSchema instances.
    attributes:
      minimum:
        description: >-
          Specifies a minimum numeric value, representing an inclusive lower limit. Only applicable for associated number or integer types.
        range: double
      exclusiveMinimum:
        description: >-
          Specifies a minimum numeric value, representing an exclusive lower limit. Only applicable for associated number or integer types.
        range: double
      maximum:
        description: >-
          Specifies a maximum numeric value, representing an inclusive upper limit. Only applicable for associated number or integer types.
        range: double
      exclusiveMaximum:
        description: >-
          Specifies a maximum numeric value, representing an exclusive upper limit. Only applicable for associated number or integer types.
        range: double
      multipleOf:
        description: >-
          Specifies the multipleOf value number. The value must strictly greater than 0. Only applicable for associated number or integer types.
        range: double
  IntegerSchema:
    is_a: DataSchema
    description: >-
      Metadata describing data of type integer. This Subclass is indicated by the value integer assigned to type in DataSchema instances.
    attributes:
      minimum:
        description: >-
          Specifies a minimum numeric value, representing an inclusive lower limit. Only applicable for associated number
          or integer types.
        range: integer
      exclusiveMinimum:
        description: >-
          Specifies a minimum numeric value, representing an exclusive lower limit. Only applicable for associated number
          or integer types.
        range: integer
      maximum:
        description: >-
          Specifies a maximum numeric value, representing an inclusive upper limit. Only applicable for associated number 
          or integer types.
        range: integer
      exclusiveMaximum:
        description: >-
          Specifies a maximum numeric value, representing an exclusive upper limit. Only applicable for associated number
          or integer types.
        range: integer
      multipleof:
        description: >-
          Specifies the multipleOf value number. The value must strictly greater than 0. Only applicable for 
          associated number or integer types.
        range: integer
  ObjectSchema:
    is_a: DataSchema
    description: >-
      Metadata describing data of type Object. This Subclass is indicated by the value object assigned to type in 
      DataSchema instances.
    attributes:
      properties:
        description: >-
          Data schema nested definitions.
        range: DataSchema
        multivalued: true
      required:
        description: >-
          Defines which members of the object type are mandatory, i.e. which members are mandatory in the payload that 
          is to be sent (e.g. input of invokeaction, writeproperty) and what members will be definitely delivered in 
          the payload that is being received (e.g. output of invokeaction, readproperty).
        multivalued: true
  StringSchema:
    is_a: DataSchema
    description: >-
      Metadata describing data of type string. This Subclass is indicated by the value string assigned to type 
      in DataSchema instances.
    attributes:
      minLength:
        description: >-
          Specifies the minimum length of a string. Only applicable for associated string types.
        range: integer
      maxLength:
        description: >-
          Specifies the maximum length of a string. Only applicable for associated string types.
        range: integer
      pattern:
        description: >-
          Provides a regular expression to express constraints of the string value. The regular expression must 
          follow the [ECMA-262] dialect.
      contentEncoding:
        description: >-
          Specifies the encoding used to store the contents, as specified in [RFC2045] (Section 6.1) and [RFC4648].
        examples:
          - value: 7bit
          - value: 8bit
          - value: binary
          - value: quoted-printable
          - value: base16
          - value: base32
          - value: base64
  NullSchema:
    is_a: DataSchema
    description: >-
      Metadata describing data of type null. This subclass is indicated by the value null assigned to type in DataSchema 
      instances. This Subclass describes only one acceptable value, namely null. It is important to note that null does 
      not mean the absence of a value. It is analogous to null in JavaScript, None in Python, null in Java and nil in 
      Ruby programming languages. It can be used as part of a oneOf declaration, where it is used to indicate, that 
      the data can also be null.

enums:
  DataschemaTypes:
    permissible_values:
      boolean:
      integer:
      number:
      string:
      object:
      array:
      null:
