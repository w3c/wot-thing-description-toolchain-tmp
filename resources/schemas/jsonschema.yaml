id: https://www.w3.org/2019/wot/json-schema
name: jsonschema
title: JSON Schema in RDF
description: >-
  LinkML schema for modelling the TD module for data schema specifications. A data schema is an abstract notation for data contained in data formats. The data schema vocabulary definition 
  reflects a very common subset of the terms defined by JSON Schema.
version: "1.1-2-June-2025"
license: MIT
contributors: Mahda_Noura
see_also:
  - https://www.w3.org/TR/wot-thing-description11/#sec-data-schema-vocabulary-definition

prefixes:
  jsonschema: https://www.w3.org/2019/wot/json-schema#
  linkml: https://w3id.org/linkml/
  xsd: http://www.w3.org/2001/XMLSchema#
  owl: http://www.w3.org/2002/07/owl#
  td: https://www.w3.org/2019/wot/td#

imports:
  - linkml:types

types:
  NonNegativeInteger:
    uri: xsd:nonNegativeInteger
    base: integer
    description: An integer that cannot be negative
    minimum_value: 0

  decimal:
    uri: xsd:decimal
    base: float
    description: A decimal number

enums:
  DataSchemaType:
    description: Assignment of JSON-based data types compatible with JSON Schema
    permissible_values:
      object:
        description: Represents an object type
      array:
        description: Represents an array type
      string:
        description: Represents a string type
      number:
        description: Represents a number type
      integer:
        description: Represents an integer type
      boolean:
        description: Represents a boolean type
      "null":
        description: Represents a null type

classes:
  MultiLanguage:
    description: >-
      A Map providing a set of human-readable texts in different languages identified by language tags as defined in BCP47.
    attributes:
      language_map:
        range: string
        multivalued: true
        pattern: "^[a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?$"

  DataSchema:
    class_uri: jsonschema:DataSchema
    description: >-
      A data schema describes the data format used. It can be used for validation.
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true
    slots:
      - type
      - title
      - titles
      - description
      - descriptions
      - writeOnly
      - readOnly
      - oneOf
      - unit
      - enum
      - format
      - const
      - default
      - contentEncoding
      - contentMediaType
      - items
      - maxItems
      - minItems
      - minimum
      - maximum
      - exclusiveMinimum
      - exclusiveMaximum
      - minLength
      - maxLength
      - multipleOf
      - properties
      - required
    slot_usage:
      type:
        range: DataSchemaType
      writeOnly:
        range: boolean
      readOnly:
        range: boolean
      oneOf:
        range: DataSchema
        multivalued: true
      unit:
        range: string
      enum:
        multivalued: true
        minimum_value: 1
      format:
        range: string
      items:
        range: DataSchema
        multivalued: true
      maxItems:
        range: NonNegativeInteger
      minItems:
        range: NonNegativeInteger
      minimum:
        range: decimal
      maximum:
        range: decimal
      exclusiveMinimum:
        range: decimal
      exclusiveMaximum:
        range: decimal
      minLength:
        range: NonNegativeInteger
      maxLength:
        range: NonNegativeInteger
      multipleOf:
        range: decimal
        pattern: ^[+]?[0-9]*\.?[0-9]+$
      properties:
        range: DataSchema
        multivalued: true
      required:
        range: string
        multivalued: true

  ArraySchema:
    class_uri: jsonschema:ArraySchema
    is_a: DataSchema
    description: >-
      Metadata describing data of type array. This subclass is indicated by the value array assigned to type in 
      DataSchema instances.
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true
    attributes:
      items:
        slot_uri: jsonschema:items
        description: Used to define the characteristics of an array
        range: DataSchema
      minItems:
        slot_uri: jsonschema:minItems
        description: Defines the minimum number of items that have to be in the array
        range: NonNegativeInteger
      maxItems:
        slot_uri: jsonschema:maxItems
        description: Defines the maximum number of items that have to be in the array
        range: NonNegativeInteger

  BooleanSchema:
    class_uri: jsonschema:BooleanSchema
    is_a: DataSchema
    description: >-
      Metadata describing data of type boolean. This subclass is indicated by the value boolean assigned to type in 
      DataSchema instances.
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true

  NumberSchema:
    class_uri: jsonschema:NumberSchema
    is_a: DataSchema
    description: >-
      Metadata describing data of type number. This subclass is indicated by the value number assigned to type in 
      DataSchema instances.
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true
    attributes:
      minimum:
        slot_uri: jsonschema:minimum
        description: >-
          Specifies a minimum numeric value, representing an inclusive lower limit. 
          Only applicable for associated number or integer types
        range: decimal
      maximum:
        slot_uri: jsonschema:maximum
        description: >-
          Specifies a maximum numeric value, representing an inclusive upper limit. 
          Only applicable for associated number or integer types
        range: decimal
      exclusiveMinimum:
        slot_uri: jsonschema:exclusiveMinimum
        description: >-
          Specifies a minimum numeric value, representing an exclusive lower limit. 
          Only applicable for associated number or integer types
        range: decimal
      exclusiveMaximum:
        slot_uri: jsonschema:exclusiveMaximum
        description: >-
          Specifies a maximum numeric value, representing an exclusive upper limit. 
          Only applicable for associated number or integer types
        range: decimal
      multipleOf:
        slot_uri: jsonschema:multipleOf
        description: >-
          Specifies the multipleOf value number. The value must strictly greater than 0. 
          Only applicable for associated number or integer types
        range: decimal
        pattern: '^(0*[1-9][0-9]*(\\.[0-9]+)?|0+\\.[0-9]*[1-9][0-9]*)$'  # Matches any positive decimal number

  IntegerSchema:
    class_uri: jsonschema:IntegerSchema
    is_a: NumberSchema
    description: >-
      Metadata describing data of type integer. This subclass is indicated by the value integer assigned to type in 
      DataSchema instances.
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true
    slot_usage:
      minimum:
        range: integer
      maximum:
        range: integer
      exclusiveMinimum:
        range: integer
      exclusiveMaximum:
        range: integer
      multipleOf:
        range: integer

  ObjectSchema:
    class_uri: jsonschema:ObjectSchema
    is_a: DataSchema
    description: >-
      Metadata describing data of type object. This subclass is indicated by the value object assigned to type in 
      DataSchema instances.
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true
    attributes:
      properties:
        slot_uri: jsonschema:properties
        description: Data schema nested definitions
        range: DataSchema
        multivalued: true
      required:
        slot_uri: jsonschema:required
        description: >-
          Defines which members of the object type are mandatory, i.e. which members are mandatory in the payload 
          that is to be sent and what members will be definitely delivered in the payload that is being received
        range: string
        multivalued: true

  StringSchema:
    class_uri: jsonschema:StringSchema
    is_a: DataSchema
    description: >-
      Metadata describing data of type string. This subclass is indicated by the value string assigned to type in 
      DataSchema instances.
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true
    attributes:
      minLength:
        slot_uri: jsonschema:minLength
        description: Specifies the minimum length of a string. Only applicable for associated string types
        range: NonNegativeInteger
      maxLength:
        slot_uri: jsonschema:maxLength
        description: Specifies the maximum length of a string. Only applicable for associated string types
        range: NonNegativeInteger
      pattern:
        slot_uri: jsonschema:pattern
        description: >-
          Provides a regular expression to express constraints of the string value. 
          The regular expression must follow the ECMA 262 dialect
        range: string
      contentEncoding:
        slot_uri: jsonschema:contentEncoding
        description: >-
          Specifies the encoding used to store the contents, as specified in RFC 2045 (Section 6.1) and RFC 4648
        range: string
        comments:
          - e.g., 7bit, 8bit, binary, quoted-printable, base16, base32, or base64
      contentMediaType:
        slot_uri: jsonschema:contentMediaType
        description: Specifies the MIME type of the contents of a string value, as described in RFC 2046
        range: string
        comments:
          - e.g., image/png, or audio/mpeg

  NullSchema:
    class_uri: jsonschema:NullSchema
    is_a: DataSchema
    description: >-
      Metadata describing data of type null. This subclass is indicated by the value null assigned to type in 
      DataSchema instances. This Subclass describes only one acceptable value, namely null. It is important to note 
      that null does not mean the absence of a value. It is analogous to null in JavaScript, None in Python, null 
      in Java and nil in Ruby programming languages. It can be used as part of a oneOf declaration, where it is 
      used to indicate, that the data can also be null. 
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true

slots:
  minimum:
    description: >-
      Specifies a minimum numeric value, representing an inclusive lower limit. 
      Only applicable for associated number or integer types.
    range: decimal

  maximum:
    description: >-
      Specifies a maximum numeric value, representing an inclusive upper limit. 
      Only applicable for associated number or integer types.
    range: decimal

  exclusiveMinimum:
    description: >-
      Specifies a minimum numeric value, representing an exclusive lower limit. 
      Only applicable for associated number or integer types.
    range: decimal

  exclusiveMaximum:
    description: >-
      Specifies a maximum numeric value, representing an exclusive upper limit. 
      Only applicable for associated number or integer types.
    range: decimal

  multipleOf:
    description: >-
      Specifies the multipleOf value number. The value must strictly greater than 0. 
      Only applicable for associated number or integer types.
    range: decimal
    pattern: ^[+]?[0-9]*\.?[0-9]+$
 