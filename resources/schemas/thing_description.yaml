id: https://www.w3.org/2019/wot/td
name: td_schema
title: Thing Description Schema
description: |-
  This schema models the Web of Things domain according to the W3C Web of Things information model.
version: "1.1-2-June-2025"
license: MIT
contributors: Mahda_Noura
see_also:
  - https://www.w3.org/TR/wot-thing-description11/

prefixes:
  linkml: https://w3id.org/linkml/
  td: https://www.w3.org/2019/wot/td#
  owl: http://www.w3.org/2002/07/owl#
  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  xml: http://www.w3.org/XML/1998/namespace
  xsd: http://www.w3.org/2001/XMLSchema#
  foaf: http://xmlns.com/foaf/0.1/
  rdfs: http://www.w3.org/2000/01/rdf-schema#
  vann: http://purl.org/vocab/vann/
  dcterms: http://purl.org/dc/terms/
  schema: http://schema.org/
  hctl: https://www.w3.org/2019/wot/hypermedia#
  wotsec: https://www.w3.org/2019/wot/security#
  jsonschema: https://www.w3.org/2019/wot/json-schema#
  tm: https://www.w3.org/2019/wot/tm#

default_range: string

imports:
  - linkml:types
  - hypermedia
  - wot_security
  - jsonschema

slots:
  uriVariables:
    description: >-
      Define URI template variables according to [RFC6570] as collection based on DataSchema declarations.
      The individual variables DataSchema cannot be an ObjectSchema or an ArraySchema.
      Thing level variables can be overridden by Interaction Affordance level variables.
    slot_uri: td:hasUriTemplateSchema
    range: DataSchema
    multivalued: true

  title:
    description: >-
      Provides a human-readable title (e.g., display a text for UI representation) based on a default language.
    slot_uri: td:title
    range: string

  titles:
    description: >-
      Provides multi-language human-readable titles (e.g., display a text for UI representation in different languages).
    slot_uri: td:titleInLanguage
    range: MultiLanguage

  description:
    description: >-
      Provides additional (human-readable) information based on a default language.
    slot_uri: td:description
    range: string

  descriptions:
    description: >-
      Can be used to support (human-readable) information in different languages.
    slot_uri: td:descriptionInLanguage
    range: MultiLanguage

types:
  bcp47_string:
    typeof: string
    pattern: "^(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"

classes:
  MultiLanguage:
    description: >-
      A Map providing a set of human-readable texts in different languages identified by language tags as defined in BCP47.
    attributes:
      language_map:
        range: string
        multivalued: true
        pattern: "^[a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?$"

  Thing:
    tree_root: true
    class_uri: td:Thing
    description: >-
      An abstraction of a physical or a virtual entity whose metadata and interfaces are described by a WoT Thing Description,
      whereas a virtual entity is the composition of one or more Things.
    attributes:
      "@context":
        description: >-
          JSON-LD keyword to define short-hand names called terms that are used throughout a TD document.
          Must contain https://www.w3.org/2022/wot/td/v1.1 for TD 1.1.
          For TD 1.0 compatibility, https://www.w3.org/2019/wot/td/v1 must be first, followed by v1.1.
        required: true
        exactly_one_of:
          - range: uri
          - range: uri
            multivalued: true
        minimum_cardinality: 1
      "@type":
        description: >-
          JSON-LD keyword to label the object with semantic tags (or types).
        exactly_one_of:
          - range: string
          - range: string
            multivalued: true
      id:
        description: >-
          Identifier of the Thing in form of a URI [RFC3986] (e.g., stable URI, temporary and mutable URI, 
          URI with local IP address, URN, etc.).
        slot_uri: td:id
        range: uri
      title:
        description: >-
          Provides a human-readable title (e.g., display a text for UI representation) based on a default language.
        slot_uri: td:title
        range: string
        required: true
      titles:
        description: >-
          Provides multi-language human-readable titles (e.g., display a text for UI representation in different languages).
        slot_uri: td:titleInLanguage
        range: MultiLanguage
      description:
        description: >-
          Provides additional (human-readable) information based on a default language.
        slot_uri: td:description
        range: string
      descriptions:
        description: >-
          Can be used to support (human-readable) information in different languages.
        slot_uri: td:descriptionInLanguage
        range: MultiLanguage
      version:
        description: >-
          Provides version information.
        slot_uri: td:versionInfo
        range: VersionInfo
      created:
        description: >-
          Provides information when the TD instance was created.
        slot_uri: dcterms:created
        range: datetime
      modified:
        description: >-
          Provides information when the TD instance was last modified.
        slot_uri: dcterms:modified
        range: datetime
      support:
        description: >-
          Provides information about the TD maintainer as URI scheme (e.g., mailto [RFC6068], tel [RFC3966], https [RFC9112]).
        slot_uri: td:supportContact
        range: uri
      base:
        description: >-
          Define the base URI that is used for all relative URI references throughout a TD document.
          Does not affect @context URIs and IRIs used within Linked Data graphs.
        slot_uri: td:baseURI
        range: uri
      properties:
        description: >-
          All Property-based Interaction Affordances of the Thing.
        slot_uri: td:hasPropertyAffordance
        range: PropertyAffordance
        multivalued: true
        inlined: true
        inlined_as_list: false
      actions:
        description: >-
          All Action-based Interaction Affordances of the Thing.
        slot_uri: td:hasActionAffordance
        range: ActionAffordance
        multivalued: true
        inlined: true
        inlined_as_list: false
      events:
        description: >-
          All Event-based Interaction Affordances of the Thing.
        slot_uri: td:hasEventAffordance
        range: EventAffordance
        multivalued: true
        inlined: true
        inlined_as_list: false
      forms:
        description: >-
          Set of form hypermedia controls that describe how an operation can be performed.
          Thing level forms are used to describe endpoints for a group of interaction affordances.
        slot_uri: td:hasForm
        range: Form
        multivalued: true
      links:
        description: >-
          Provides Web links to arbitrary resources that relate to the specified Thing Description.
        slot_uri: td:hasLink
        range: Link
        multivalued: true
      security:
        description: >-
          Set of security definition names, chosen from those defined in securityDefinitions.
          These must all be satisfied for access to resources.
        slot_uri: td:hasSecurityConfiguration
        exactly_one_of:
          - range: string
          - range: string
            multivalued: true
        required: true
        minimum_cardinality: 1
      securityDefinitions:
        description: >-
          Set of named security configurations (definitions only).
          Not actually applied unless names are used in a security name-value pair.
        slot_uri: td:definesSecurityScheme
        range: SecurityScheme
        required: true
        multivalued: true
        minimum_cardinality: 1
        inlined: true
        inlined_as_list: false
      profile:
        description: >-
          Indicates the WoT Profile mechanisms followed by this Thing Description and the corresponding Thing implementation.
        slot_uri: td:followsProfile
        exactly_one_of:
          - range: uri
          - range: uri
            multivalued: true
      schemaDefinitions:
        description: >-
          Set of named data schemas. To be used in a schema name-value pair inside an AdditionalExpectedResponse object.
        slot_uri: td:schemaDefinitions
        range: DataSchema
        multivalued: true
        inlined: true
        inlined_as_list: false

  VersionInfo:
    class_uri: td:versionInfo
    description: >-
      Metadata that provides version information about the TD document.
      Values should follow semantic versioning pattern (major.minor.patch).
    attributes:
      instance:
        description: >-
          Provides a version identifier of this TD instance.
        slot_uri: td:instance
        range: string
        required: true
      model:
        description: >-
          Provides a version indicator of the underlying TM.
        slot_uri: td:model
        range: string

  InteractionAffordance:
    class_uri: td:InteractionAffordance
    description: >-
      Metadata of a Thing that shows the possible choices to Consumers, thereby suggesting how Consumers may interact with the Thing.
      There are three types of Interaction Affordances: Properties, Actions, and Events.
    abstract: true
    attributes:
      "@type":
        description: >-
          JSON-LD keyword to label the object with semantic tags (or types).
        exactly_one_of:
          - range: string
          - range: string
            multivalued: true
      name:
        description: >-
          Name of the interaction affordance.
        slot_uri: td:name
        range: string
        identifier: true
      forms:
        description: >-
          Set of form hypermedia controls that describe how an operation can be performed.
          The array cannot be empty.
        slot_uri: td:hasForm
        range: Form
        multivalued: true
        required: true
        minimum_cardinality: 1
    slots:
      - title
      - titles
      - description
      - descriptions
      - uriVariables

  PropertyAffordance:
    is_a: InteractionAffordance
    class_uri: td:PropertyAffordance
    description: >-
      An Interaction Affordance that exposes state of the Thing.
      This state can be retrieved (read) and/or updated (write).
      Things can also choose to make Properties observable by pushing the new state after a change.
    mixins:
      - DataSchema
    attributes:
      observable:
        description: >-
          A hint that indicates whether Servients hosting the Thing and Intermediaries should provide a Protocol Binding
          that supports the observeproperty and unobserveproperty operations for this Property.
        slot_uri: td:isObservable
        range: boolean

  ActionAffordance:
    is_a: InteractionAffordance
    class_uri: td:ActionAffordance
    description: >-
      An Interaction Affordance that allows to invoke a function of the Thing,
      which manipulates state (e.g., toggling a lamp on or off) or triggers a process on the Thing (e.g., dim a lamp over time).
    attributes:
      input:
        description: >-
          Used to define the input data schema of the Action.
        slot_uri: td:hasInputSchema
        range: DataSchema
      output:
        description: >-
          Used to define the output data schema of the Action.
        slot_uri: td:hasOutputSchema
        range: DataSchema
      safe:
        description: >-
          Signals if the Action is safe (=true) or not.
          Used to signal if there is no internal state is changed when invoking an Action.
          In that case responses can be cached as example.
        slot_uri: td:isSafe
        range: boolean
      idempotent:
        description: >-
          Indicates whether the Action is idempotent (=true) or not.
          Informs whether the Action can be called repeatedly with the same result, if present, based on the same input.
        slot_uri: td:isIdempotent
        range: boolean
      synchronous:
        description: >-
          Indicates whether the action is synchronous (=true) or not.
          A synchronous action means that the response contains all information about the result
          and no further querying about the status is needed.
        slot_uri: td:isSynchronous
        range: boolean

  EventAffordance:
    is_a: InteractionAffordance
    class_uri: td:EventAffordance
    description: >-
      An Interaction Affordance that describes an event source,
      which asynchronously pushes event data to Consumers (e.g., overheating alerts).
    attributes:
      subscription:
        description: >-
          Defines data that needs to be passed upon subscription,
          e.g., filters or message format for setting up Webhooks.
        slot_uri: td:hasSubscriptionSchema
        range: DataSchema
      data:
        description: >-
          Defines the data schema of the Event instance messages pushed by the Thing.
        slot_uri: td:hasNotificationSchema
        range: DataSchema
      dataResponse:
        description: >-
          Defines the data schema of the Event response messages sent by the consumer in response to a data message.
        slot_uri: td:hasNotificationResponseSchema
        range: DataSchema
      cancellation:
        description: >-
          Defines any data that needs to be passed to cancel a subscription,
          e.g., a specific message to remove a Webhook.
        slot_uri: td:hasCancellationSchema
        range: DataSchema

enums:
  OperationType:
    description: >-
      Enumerations of well-known operation types necessary to implement the WoT interaction model.
    permissible_values:
      readproperty:
        description: Identifies the read operation on Property Affordances to retrieve the corresponding data.
        meaning: td:readProperty
      writeproperty:
        description: Identifies the write operation on Property Affordances to update the corresponding data.
        meaning: td:writeProperty
      observeproperty:
        description: Identifies the observe operation on Property Affordances to be notified with the new data when the Property is updated.
        meaning: td:observeProperty
      unobserveproperty:
        description: Identifies the unobserve operation on Property Affordances to stop the corresponding notifications.
        meaning: td:unobserveProperty
      invokeaction:
        description: Identifies the invoke operation on Action Affordances to perform the corresponding action.
        meaning: td:invokeAction
      queryaction:
        description: Identifies the querying operation on Action Affordances to get the status of the corresponding action.
        meaning: td:queryAction
      cancellation:
        description: Identifies the cancel operation on Action Affordances to cancel the ongoing corresponding action.
        meaning: td:cancelAction
      subscribeevent:
        description: Identifies the subscribe operation on Event Affordances to be notified by the Thing when the event occurs.
        meaning: td:subscribeEvent
      unsubscribeevent:
        description: Identifies the unsubscribe operation on Event Affordances to stop the corresponding notifications.
        meaning: td:unsubscribeEvent
      readallproperties:
        description: Identifies the readallproperties operation on a Thing to retrieve the data of all Properties in a single interaction.
        meaning: td:readAllProperties
      writeallproperties:
        description: Identifies the writeallproperties operation on a Thing to update the data of all writable Properties in a single interaction.
        meaning: writeAllProperties
      readmultipleproperties:
        description: Identifies the readmultipleproperties operation on a Thing to retrieve the data of selected Properties in a single interaction.
        meaning: td:readMultipleProperties
      writemultipleproperties:
        description: Identifies the writemultipleproperties operation on a Thing to update the data of selected writable Properties in a single interaction.
        meaning: td:writeMultipleProperties
      observeallproperties:
        description: Identifies the observeallproperties operation on Properties to be notified with new data when any Property is updated.
        meaning: td:observeAllProperties
      unobserveallproperties:
        description: Identifies the unobserveallproperties operation on Properties to stop notifications from all Properties in a single interaction.
        meaning: td:unobserveAllProperties
      subscribeallevents:
        description: Identifies the subscribeallevents operation on Events to subscribe to notifications from all Events in a single interaction.
        meaning: td:subscribeAllEvents
      unsubscribeallevents:
        description: Identifies the unsubscribeallevents operation on Events to unsubscribe from notifications from all Events in a single interaction.
        meaning: td:unsubscribeAllEvents
      queryallactions:
        description: Identifies the queryallactions operation on a Thing to get the status of all Actions in a single interaction.
        meaning: td:queryAllActions