id: https://www.w3.org/2019/wot/td
name: things_description
title: Thing Description Schema
description: |-
  This schema models the Web of Things domain according to the W3C Web of Things information model.
version: "1.1-2-June-2025"
license: MIT
contributors: Mahda_Noura
see_also:
  - https://www.w3.org/TR/wot-thing-description11/

prefixes:
  linkml: https://w3id.org/linkml/
  td: https://www.w3.org/2019/wot/td#
  owl: http://www.w3.org/2002/07/owl#
  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  xml: http://www.w3.org/XML/1998/namespace
  xsd: http://www.w3.org/2001/XMLSchema#
  foaf: http://xmlns.com/foaf/0.1/
  rdfs: http://www.w3.org/2000/01/rdf-schema#
  vann: http://purl.org/vocab/vann/
  dcterms: http://purl.org/dc/terms/
  schema: http://schema.org/
  hctl: https://www.w3.org/2019/wot/hypermedia#
  wotsec: https://www.w3.org/2019/wot/security#
  jsonschema: https://www.w3.org/2019/wot/json-schema#
  tm: https://www.w3.org/2019/wot/tm#

default_range: string

imports:
  - linkml:types
  - hypermedia
  - wot_security
  - jsonschema

slots:
  type:
    description: >-
      JSON Schema type (e.g., object, array, string, number, or integer)
    range: string

  writeOnly:
    description: >-
      If true, indicates the value can only be written but not read
    range: boolean

  readOnly:
    description: >-
      If true, indicates the value can only be read but not written
    range: boolean

  oneOf:
    description: >-
      Used to ensure the data is valid against exactly one of the specified schemas
    range: DataSchema
    multivalued: true

  unit:
    description: >-
      Unit of the value
    range: string

  enum:
    description: >-
      Restricted set of values provided as an array
    range: string
    multivalued: true
    minimum_value: 1

  format:
    description: >-
      Provides a hint indicating how the data should be formatted
    range: string

  const:
    description: >-
      Provides a constant value
    range: string

  default:
    description: >-
      Default value
    range: string

  items:
    description: >-
      Used to define the characteristics of an array
    range: DataSchema

  maxItems:
    description: >-
      Maximum number of items in array
    range: integer
    minimum_value: 0

  minItems:
    description: >-
      Minimum number of items in array
    range: integer
    minimum_value: 0

  minimum:
    description: >-
      Minimum value
    range: number

  maximum:
    description: >-
      Maximum value
    range: number

  exclusiveMinimum:
    description: >-
      Exclusive minimum value
    range: number

  exclusiveMaximum:
    description: >-
      Exclusive maximum value
    range: number

  minLength:
    description: >-
      Minimum length of string
    range: integer
    minimum_value: 0

  maxLength:
    description: >-
      Maximum length of string
    range: integer
    minimum_value: 0

  multipleOf:
    description: >-
      A number that divides the value with no remainder
    range: number
    minimum_value: 0.000001

  required:
    description: >-
      Required properties
    range: string
    multivalued: true

  "@context":
    description: >-
      JSON-LD context of the Thing Description
    range: ThingContext
    required: true

  "@type":
    description: >-
      JSON-LD keyword to label the object with semantic tags (or types)
    range: string
    multivalued: true

  id:
    description: >-
      Unique identifier of the Thing
    range: uri

  version:
    description: >-
      Version information of the Thing Description
    range: VersionInfo

  created:
    description: >-
      Timestamp of Thing Description creation
    range: datetime

  modified:
    description: >-
      Timestamp of Thing Description modification
    range: datetime

  support:
    description: >-
      Support contact information for the Thing
    range: uri

  base:
    description: >-
      Define the base URI that is used for all relative URI references in the TD
    range: uri

  properties:
    description: >-
      All Property-based Interaction Affordances of the Thing. Each key is a unique property name
      and its value is a PropertyAffordance object.
    range: PropertyAffordance
    inlined: true
    multivalued: false

  actions:
    description: >-
      All Action-based Interaction Affordances of the Thing. Each key is a unique action name
      and its value is an ActionAffordance object.
    range: ActionAffordance
    inlined: true
    multivalued: false

  events:
    description: >-
      All Event-based Interaction Affordances of the Thing. Each key is a unique event name
      and its value is an EventAffordance object.
    range: EventAffordance
    inlined: true
    multivalued: false

  links:
    description: >-
      Provides Web links to arbitrary resources that relate to the specified Thing
    range: Link
    multivalued: true

  forms:
    description: >-
      Set of form hypermedia controls that describe how an operation can be performed
    range: Form
    multivalued: true

  security:
    description: >-
      Set of security configuration names, chosen from the SecurityScheme definitions
    range: string
    multivalued: true
    required: true

  securityDefinitions:
    description: >-
      Set of named security configurations, defined in the SecurityScheme definitions
    range: SecurityScheme
    multivalued: true
    required: true
    minimum_value: 1

  profile:
    description: >-
      Set of URIs that indicate the TD document conforms to certain constraints and conventions
    range: uri
    multivalued: true

  schemaDefinitions:
    description: >-
      Set of schema definitions that can be used to define data schemas of a Thing
    range: DataSchema
    multivalued: true

  uriVariables:
    description: >-
      Define URI template variables according to [RFC6570] as collection based on DataSchema declarations.
      The individual variables DataSchema cannot be an ObjectSchema or an ArraySchema.
      Thing level variables can be overridden by Interaction Affordance level variables.
    slot_uri: td:hasUriTemplateSchema
    range: DataSchema
    multivalued: true

  title:
    description: >-
      Provides a human-readable title (e.g., display a text for UI representation) based on a default language.
    slot_uri: td:title
    range: string

  titles:
    description: >-
      Provides multi-language human-readable titles (e.g., display a text for UI representation in different languages).
    slot_uri: td:titleInLanguage
    range: MultiLanguage

  description:
    description: >-
      Provides additional (human-readable) information based on a default language.
    slot_uri: td:description
    range: string

  descriptions:
    description: >-
      Can be used to support (human-readable) information in different languages.
    slot_uri: td:descriptionInLanguage
    range: MultiLanguage

  op:
    description: >-
      Indicates the operation type (e.g., readproperty, writeproperty, observeproperty, etc.)
    range: string
    multivalued: true

  contentType:
    description: >-
      Media type of the interaction
    range: string

  href:
    description: >-
      URI of the endpoint where an interaction can be initiated
    range: uri
    required: true

  contentCoding:
    description: >-
      Content coding values indicate an encoding transformation that has been applied to a representation
    range: string

  contentMediaType:
    description: >-
      Media type of the content
    range: string

  additionalResponses:
    description: >-
      This field indicates additional expected responses
    range: AdditionalExpectedResponse
    multivalued: true

  response:
    description: >-
      This field indicates the expected response media type
    range: ExpectedResponse

  subprotocol:
    description: >-
      Indicates the exact protocol that should be used for additional notifications
    range: string
    examples:
      - value: longpoll
      - value: websub
      - value: sse

  contentEncoding:
    description: >-
      Content encoding values indicate an encoding transformation that has been applied to a representation
    range: string

  schema:
    description: >-
      Schema of the response
    range: string

  success:
    description: >-
      Indicates whether the response represents a successful interaction
    range: boolean

types:
  number:
    base: decimal
    uri: xsd:decimal
    description: >-
      A number can be an integer or a decimal number

  integer:
    base: int
    uri: xsd:integer
    description: >-
      An integer number

  boolean:
    base: bool
    uri: xsd:boolean
    description: >-
      A boolean value (true or false)

  string:
    base: str
    uri: xsd:string
    description: >-
      A character string

  uri:
    base: str
    uri: xsd:anyURI
    description: >-
      A URI

  datetime:
    base: str
    uri: xsd:dateTime
    description: >-
      A date and time value

  bcp47_string:
    base: str
    uri: xsd:string
    pattern: "^(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"

  ThingContextURI:
    typeof: string
    description: >-
      A URI that identifies the TD context version
    pattern: ^(https://www\.w3\.org/2019/wot/td/v1|https://www\.w3\.org/2022/wot/td/v1\.1|http://www\.w3\.org/ns/td)$

classes:
  MultiLanguage:
    description: >-
      A Map providing a set of human-readable texts in different languages identified by language tags as defined in BCP47.
    attributes:
      language_map:
        range: string
        multivalued: true
        pattern: "^[a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?$"

  ThingContext:
    description: >-
      The JSON-LD context of a Thing Description, which can be the TD context URI or an array of context URIs
    attributes:
      context_value:
        range: ThingContextURI
        multivalued: true
        minimum_value: 1

  Thing:
    tree_root: true
    description: >-
      Describes a Thing with its Interaction Affordances (Properties, Actions, and Events), security configurations, and protocol bindings.
    slots:
      - "@context"
      - "@type"
      - id
      - title
      - titles
      - description
      - descriptions
      - version
      - created
      - modified
      - support
      - base
      - properties
      - actions
      - events
      - links
      - forms
      - security
      - securityDefinitions
      - profile
      - schemaDefinitions
      - uriVariables
    slot_usage:
      "@context":
        range: ThingContext
        required: true
      title:
        required: true
      security:
        range: string
        multivalued: true
        required: true
      securityDefinitions:
        range: SecurityScheme
        multivalued: true
        required: true
        minimum_value: 1

  VersionInfo:
    class_uri: td:versionInfo
    description: >-
      Metadata that provides version information about the TD document.
      Values should follow semantic versioning pattern (major.minor.patch).
    attributes:
      instance:
        description: >-
          Provides a version identifier of this TD instance.
        slot_uri: td:instance
        range: string
        required: true
      model:
        description: >-
          Provides a version indicator of the underlying TM.
        slot_uri: td:model
        range: string

  InteractionAffordance:
    class_uri: td:InteractionAffordance
    description: >-
      Metadata of a Thing that shows the possible choices to Consumers, thereby suggesting how Consumers may interact with the Thing.
      There are three types of Interaction Affordances: Properties, Actions, and Events.
    abstract: true
    attributes:
      "@type":
        description: >-
          JSON-LD keyword to label the object with semantic tags (or types).
        exactly_one_of:
          - range: string
          - range: string
            multivalued: true
      name:
        description: >-
          Name of the interaction affordance.
        slot_uri: td:name
        range: string
        identifier: true
      forms:
        description: >-
          Set of form hypermedia controls that describe how an operation can be performed.
          The array cannot be empty.
        slot_uri: td:hasForm
        range: Form
        multivalued: true
        required: true
        minimum_cardinality: 1
    slots:
      - title
      - titles
      - description
      - descriptions
      - uriVariables

  PropertyAffordance:
    is_a: InteractionAffordance
    class_uri: td:PropertyAffordance
    description: >-
      An Interaction Affordance that exposes state of the Thing.
      This state can be retrieved (read) and/or updated (write).
      Things can also choose to make Properties observable by pushing the new state after a change.
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true
    slots:
      - type
      - writeOnly
      - readOnly
      - oneOf
      - unit
      - enum
      - format
      - const
      - default
      - items
      - maxItems
      - minItems
      - minimum
      - maximum
      - exclusiveMinimum
      - exclusiveMaximum
      - minLength
      - maxLength
      - multipleOf
      - properties
      - required
    attributes:
      observable:
        description: >-
          A hint that indicates whether Servients hosting the Thing and Intermediaries should provide a Protocol Binding
          that supports the observeproperty and unobserveproperty operations for this Property.
        slot_uri: td:isObservable
        range: boolean

  ActionAffordance:
    is_a: InteractionAffordance
    class_uri: td:ActionAffordance
    description: >-
      An Interaction Affordance that allows to invoke a function of the Thing,
      which manipulates state (e.g., toggling a lamp on or off) or triggers a process on the Thing (e.g., dim a lamp over time).
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true
    attributes:
      input:
        description: >-
          Used to define the input data schema of the Action.
        slot_uri: td:hasInputSchema
        range: DataSchema
      output:
        description: >-
          Used to define the output data schema of the Action.
        slot_uri: td:hasOutputSchema
        range: DataSchema
      safe:
        description: >-
          Signals if the Action is safe (=true) or not.
          Used to signal if there is no internal state is changed when invoking an Action.
          In that case responses can be cached as example.
        slot_uri: td:isSafe
        range: boolean
      idempotent:
        description: >-
          Indicates whether the Action is idempotent (=true) or not.
          Informs whether the Action can be called repeatedly with the same result, if present, based on the same input.
        slot_uri: td:isIdempotent
        range: boolean
      synchronous:
        description: >-
          Indicates whether the action is synchronous (=true) or not.
          A synchronous action means that the response contains all information about the result
          and no further querying about the status is needed.
        slot_uri: td:isSynchronous
        range: boolean

  EventAffordance:
    is_a: InteractionAffordance
    class_uri: td:EventAffordance
    description: >-
      An Interaction Affordance that describes an event source,
      which asynchronously pushes event data to Consumers (e.g., overheating alerts).
    annotations:
      jsonschema_config:
        tag: jsonschema_config
        value:
          additionalProperties: true
    attributes:
      subscription:
        description: >-
          Defines data that needs to be passed upon subscription,
          e.g., filters or message format for setting up Webhooks.
        slot_uri: td:hasSubscriptionSchema
        range: DataSchema
      data:
        description: >-
          Defines the data schema of the Event instance messages pushed by the Thing.
        slot_uri: td:hasNotificationSchema
        range: DataSchema
      dataResponse:
        description: >-
          Defines the data schema of the Event response messages sent by the consumer in response to a data message.
        slot_uri: td:hasNotificationResponseSchema
        range: DataSchema
      cancellation:
        description: >-
          Defines any data that needs to be passed to cancel a subscription,
          e.g., a specific message to remove a Webhook.
        slot_uri: td:hasCancellationSchema
        range: DataSchema

  AdditionalExpectedResponse:
    description: >-
      Describes additional expected responses from an interaction
    slots:
      - contentType
      - schema
      - success

  ExpectedResponse:
    description: >-
      Describes the expected response from an interaction
    slots:
      - contentType

enums:
  OperationType:
    description: >-
      Enumerations of well-known operation types necessary to implement the WoT interaction model.
    permissible_values:
      readproperty:
        description: Identifies the read operation on Property Affordances to retrieve the corresponding data.
        meaning: td:readProperty
      writeproperty:
        description: Identifies the write operation on Property Affordances to update the corresponding data.
        meaning: td:writeProperty
      observeproperty:
        description: Identifies the observe operation on Property Affordances to be notified with the new data when the Property is updated.
        meaning: td:observeProperty
      unobserveproperty:
        description: Identifies the unobserve operation on Property Affordances to stop the corresponding notifications.
        meaning: td:unobserveProperty
      invokeaction:
        description: Identifies the invoke operation on Action Affordances to perform the corresponding action.
        meaning: td:invokeAction
      queryaction:
        description: Identifies the querying operation on Action Affordances to get the status of the corresponding action.
        meaning: td:queryAction
      cancellation:
        description: Identifies the cancel operation on Action Affordances to cancel the ongoing corresponding action.
        meaning: td:cancelAction
      subscribeevent:
        description: Identifies the subscribe operation on Event Affordances to be notified by the Thing when the event occurs.
        meaning: td:subscribeEvent
      unsubscribeevent:
        description: Identifies the unsubscribe operation on Event Affordances to stop the corresponding notifications.
        meaning: td:unsubscribeEvent
      readallproperties:
        description: Identifies the readallproperties operation on a Thing to retrieve the data of all Properties in a single interaction.
        meaning: td:readAllProperties
      writeallproperties:
        description: Identifies the writeallproperties operation on a Thing to update the data of all writable Properties in a single interaction.
        meaning: writeAllProperties
      readmultipleproperties:
        description: Identifies the readmultipleproperties operation on a Thing to retrieve the data of selected Properties in a single interaction.
        meaning: td:readMultipleProperties
      writemultipleproperties:
        description: Identifies the writemultipleproperties operation on a Thing to update the data of selected writable Properties in a single interaction.
        meaning: td:writeMultipleProperties
      observeallproperties:
        description: Identifies the observeallproperties operation on Properties to be notified with new data when any Property is updated.
        meaning: td:observeAllProperties
      unobserveallproperties:
        description: Identifies the unobserveallproperties operation on Properties to stop notifications from all Properties in a single interaction.
        meaning: td:unobserveAllProperties
      subscribeallevents:
        description: Identifies the subscribeallevents operation on Events to subscribe to notifications from all Events in a single interaction.
        meaning: td:subscribeAllEvents
      unsubscribeallevents:
        description: Identifies the unsubscribeallevents operation on Events to unsubscribe from notifications from all Events in a single interaction.
        meaning: td:unsubscribeAllEvents
      queryallactions:
        description: Identifies the queryallactions operation on a Thing to get the status of all Actions in a single interaction.
        meaning: td:queryAllActions